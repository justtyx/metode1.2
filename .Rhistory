y <- c(1, 4, 9, 16, 25)
x <- c(1, 2, 3, 4, 5)
y <- c(1, 4, 9, 16, 25)
plot(x, y)
plot(x, y, type='b')
?install.packages
??intall
install.packages('nyxflights13')
# Load necessary libraries
library(ggplot2)
# Create a sample dataset based on "Ligestillingen er stort set opnået" percentages
data <- c(34, 29, 32, 35, 32, 30, 11, 13, 15, 25, 23, 42, 31, 36, 46, 50, 35, 51)
# Convert to a data frame
df <- data.frame(values = data)
# Plot the density curve with a normal distribution overlay
ggplot(df, aes(x = values)) +
geom_density(fill = "lightblue", alpha = 0.5) +  # Density curve
stat_function(fun = dnorm, args = list(mean = mean(data), sd = sd(data)),
color = "red", size = 1.2) +  # Normal distribution
labs(title = "Distribution of Perceived Gender Equality Achievement",
x = "Percentage",
y = "Density") +
theme_minimal()
# Load required libraries
library(ggplot2)
library(reshape2)
install.reshape2
install.packages(reshape2)
install.packages("reshape2")
# Define the data
data <- data.frame(
Category = c(rep("Gender", 2), rep("Age", 6), rep("Party", 12)),
Group = c("Women", "Men",
"18-29", "30-39", "40-49", "50-59", "60-69", "70+",
"Enhedslisten", "Alternativet", "Socialistisk Folkeparti", "Radikale Venstre",
"Socialdemokratiet", "Moderaterne", "Dansk Folkeparti", "Danmarksdemokraterne",
"Venstre", "Konservative", "Nye Borgerlige", "Liberal Alliance"),
Percentage = c(21, 43,
34, 29, 32, 35, 32, 30,
11, 13, 15, 25, 23, 42, 31, 36, 46, 50, 35, 51)
)
library(reshape2)
# Define the data
data <- data.frame(
Category = c(rep("Gender", 2), rep("Age", 6), rep("Party", 12)),
Group = c("Women", "Men",
"18-29", "30-39", "40-49", "50-59", "60-69", "70+",
"Enhedslisten", "Alternativet", "Socialistisk Folkeparti", "Radikale Venstre",
"Socialdemokratiet", "Moderaterne", "Dansk Folkeparti", "Danmarksdemokraterne",
"Venstre", "Konservative", "Nye Borgerlige", "Liberal Alliance"),
Percentage = c(21, 43,
34, 29, 32, 35, 32, 30,
11, 13, 15, 25, 23, 42, 31, 36, 46, 50, 35, 51)
)
# Compute overall mean for reference
overall_mean <- mean(data$Percentage)
data
# Plot
ggplot(data, aes(x = Percentage, color = Group)) +
geom_density(aes(group = Group), size = 1) +  # Density for each group
geom_vline(xintercept = overall_mean, color = "black", linetype = "dashed", size = 1.2) +  # Overall mean line
facet_wrap(~ Category, scales = "free") +  # Separate plots for gender, age, and party
labs(title = "Distribution of Perceived Gender Equality Achievement",
x = "Percentage",
y = "Density") +
theme_minimal()
# Load necessary libraries
library(ggplot2)
# Create a sample dataset based on "Ligestillingen er stort set opnået" percentages
data <- c(34, 29, 32, 35, 32, 30, 11, 13, 15, 25, 23, 42, 31, 36, 46, 50, 35, 51)
# Convert to a data frame
df <- data.frame(values = data)
# Plot the density curve with a normal distribution overlay
ggplot(df, aes(x = values)) +
geom_density(fill = "lightblue", alpha = 0.5) +  # Density curve
stat_function(fun = dnorm, args = list(mean = mean(data), sd = sd(data)),
color = "red", size = 1.2) +  # Normal distribution
labs(title = "Distribution of Perceived Gender Equality Achievement",
x = "Percentage",
y = "Density") +
theme_minimal()
# Plot the density curve with a normal distribution overlay
ggplot(df, aes(x = values)) +
geom_density(fill = "lightblue", alpha = 0.5) +  # Density curve
stat_function(fun = dnorm, args = list(mean = mean(data), sd = sd(data)),
color = "red", size = 1.2) +  # Normal distribution
labs(title = "Distribution of Perceived Gender Equality Achievement",
x = "Percentage",
y = "Density") +
theme_minimal()
system("git --version")
system("git config --global user.name 'justtyx'")
system("git config --global user.email 'justina.jemeljanovaite@gmail.com'")
system("git config --global --list")
system("ssh-keygen -t rsa .b 4096 -C 'justina.jemeljanovaite@gmail.com'")
system("cat ~/.ssh/id_rsa.pub")
system("ssh-keygen -t rsa -b 4096 -C 'justina.jemeljanovaite@gmail.com'")
system("cat ~/.ssh/id_rsa.pub")
system("C:\Users\justi/.ssh/id_rsa")
system("C:/Users/justi/.ssh/id_rsa")
system("cat ~/.ssh/id_rsa.pub")
system("cat ~/.ssh/id_rsa.pub")
system("ssh-keygen -t rsa -b 4096 -C 'justina.jemeljanovaite@gmail.com'")
system("cat ~/.ssh/id_rsa.pub")
system("ls ~/.ssh")
system("ssh-keygen -t rsa -b 4096 -C 'justina.jemeljanovaite@gmail.com' -f ~/.ssh/id_rsa")
setwd("C:/Users/justi/OneDrive/Desktop/statskundskab/Metode 1/Skriveøvelse 2/r")
getwd()
#load packages
library(haven)
library(tidyverse)
library(scales)
library(psych)
library(dplyr)
library(tidyr)
library(e1071)
library(broom)
# Typetal funktion
getmode <- function(x) {
uniq <- na.omit(unique(x))
uniq[which.max(tabulate(match(x, uniq)))]
}
#load data
cses6 <- read_dta("cses6/CSES6.dta")
# Filtrér til kun Danmark
cses_dk <- cses6 %>%
filter(F1006_NAM == "Denmark")
# Klargør variabler
tillid_dk <- cses_dk |>
select(
parlament = F3007_1,
regering = F3007_2,
retsvæsenet = F3007_3,
partier = F3007_5,
uddannelse = F2003,
køn = F2002,
alder = F2001_A
)
# Fjern 98 = ønsker ikke at svare og 99 = ved ikke
tillid_dk  <- tillid_dk  |>
mutate(
across(c(parlament, regering, retsvæsenet, partier), ~ na_if(., 7)),
across(c(parlament, regering, retsvæsenet, partier), ~ na_if(., 8))
)
# Reverse-kod
tillid_dk  <- tillid_dk  |>
mutate(
parlament =  5 - parlament,
regering = 5- regering,
retsvæsenet = 5- retsvæsenet,
partier = 5 - partier
)
# Konstruer indeks: gennemsnit hvis højst én NA
tillid_dk <- tillid_dk |>
rowwise() |>
mutate(
tillid_rå = mean(c_across(c(parlament, regering, retsvæsenet, partier)), na.rm = TRUE),
tillid_mangler = sum(is.na(c_across(c(parlament, regering, retsvæsenet, partier)))),
tillid = ifelse(tillid_mangler <= 1, tillid_rå, NA)
) |>
ungroup()
#opsummering
summary(tillid_dk$tillid)
#typetal
typetal_tillid <- getmode(tillid_dk$tillid)
print(typetal_tillid)
# Cronbach's alpha
psych::alpha(tillid_dk[, c(
"parlament",
"regering",
"retsvæsenet",
"partier"
)])
# Beregn gennemsnit og standardafvigelse for tillid
middelvaerdi_tillid <- mean(tillid_dk$tillid, na.rm = TRUE)
spredning_tillid <- sd(tillid_dk$tillid, na.rm = TRUE)
# Beregn intervaller for ±1, ±2 og ±3 standardafvigelser
interval_1sd_tillid <- c(middelvaerdi_tillid - spredning_tillid, middelvaerdi_tillid + spredning_tillid)   # Ca. 68 %
interval_2sd_tillid <- c(middelvaerdi_tillid - 2 * spredning_tillid, middelvaerdi_tillid + 2 * spredning_tillid)  # Ca. 95 %
interval_3sd_tillid <- c(middelvaerdi_tillid - 3 * spredning_tillid, middelvaerdi_tillid + 3 * spredning_tillid)  # Ca. 99,7 %
# Udskriv intervaller
interval_1sd_tillid
interval_2sd_tillid
interval_3sd_tillid
# Skævhed
skew(tillid_dk$tillid, na.rm = TRUE)
# Kurtosis
kurtosis(tillid_dk$tillid, na.rm = TRUE)
#Histogram
ggplot(tillid_dk, aes(x = tillid)) +
geom_histogram(binwidth = 0.25, fill = "hotpink", color = "black", boundary = 1) +
scale_x_continuous(breaks = 1:4, limits = c(1, 4)) +
labs(
title = "Fordeling af politisk tillid (2022)",
x = "Politisk tillid (1 = lav, 5 = høj)",
y = "Antal respondenter"
) +
theme_minimal(base_size = 13) +
theme(
plot.title = element_text(face = "bold", size = 14, hjust = 0.5, margin = margin(b = 10)),
axis.title = element_text(size = 12),
panel.grid.major = element_line(color = "#E5E7EB"),
panel.grid.minor = element_blank()
) +
ylim(0, 400)
#uafhængig variabel - uddannelse
#remove NAs
tillid_dk <- tillid_dk |>
mutate(uddannelse = na_if(uddannelse, 97),
uddannelse = na_if(uddannelse, 98),
uddannelse = na_if(uddannelse, 10))
#labels
tillid_dk <- tillid_dk |>
mutate(uddannelse_grp = case_when(
uddannelse %in% 1:2 ~ "Grundskole",
uddannelse %in% 3:4     ~ "Gymnasial",
uddannelse == 5     ~ "Erhvervsfaglig",
uddannelse == 6     ~ "Kort videregående",
uddannelse == 7     ~ "Mellemlang videregående",
uddannelse == 8     ~ "Lang videregående",
uddannelse == 9     ~ "Forskeruddannelse",
TRUE ~ NA_character_
)) |>
mutate(uddannelse_grp = factor(uddannelse_grp, levels = c(
"Grundskole", "Gymnasial", "Erhvervsfaglig",
"Kort videregående", "Mellemlang videregående", "Lang videregående", "Forskeruddannelse"
)))
#sammenligning af værdier
tillid_dk |>
group_by(uddannelse_grp) |>
summarise(
n = n(),
mean = round(mean(tillid, na.rm = TRUE), 2),
median = median(tillid, na.rm = TRUE),
sd = round(sd(tillid, na.rm = TRUE), 2)
)
#visualisering
ggplot(tillid_dk, aes(x = uddannelse_grp, y = tillid)) +
geom_boxplot(fill = "hotpink", color = "black", outlier.shape = NA) +
labs(
title = "Politisk tillid fordelt på uddannelsesniveau (2022)",
x = "Uddannelsesniveau",
y = "Politisk tillid (1 = lav, 4 = høj)"
) +
theme_minimal(base_size = 13) +
theme(
plot.title = element_text(face = "bold", hjust = 0.5),
axis.text.x = element_text(angle = 45, hjust = 1),
axis.title = element_text(size = 12)
) +
ylim(1, 4)
# Kategorisér politisk tillid i tre grupper
tillid_dk <- tillid_dk |>
mutate(
tillid_kat = case_when(
tillid < 2.5 ~ "Lav",
tillid >= 2.5 & tillid < 3.25 ~ "Middel",
tillid >= 3.25 ~ "Høj",
TRUE ~ NA_character_
),
tillid_kat = factor(tillid_kat, levels = c("Lav", "Middel", "Høj"))
)
# Krydstabel med procent i hver tillidskategori inden for hver uddannelsesgruppe
tabel_kryds <- tillid_dk |>
filter(!is.na(uddannelse_grp), !is.na(tillid_kat)) |>
count(uddannelse_grp, tillid_kat) |>
group_by(uddannelse_grp) |>
mutate(total = sum(n)) |>
mutate(procent = case_when(
tillid_kat == "Lav"    ~ round(100 * n / total, 1),
tillid_kat == "Middel" ~ round(100 * n / total, 1),
tillid_kat == "Høj"    ~ 100 - sum(round(100 * n / total, 1)[tillid_kat != "Høj"]),
TRUE ~ NA_real_
)) |>
select(uddannelse_grp, tillid_kat, procent)
# Vis tabellen i bredt format
krydstabel_bred <- tabel_kryds |>
pivot_wider(names_from = tillid_kat, values_from = procent)
# Udskriv
print(krydstabel_bred)
# Beregn totalfordeling på tværs af alle uddannelsesgrupper
total_row <- tillid_dk |>
filter(!is.na(tillid_kat)) |>
count(tillid_kat) |>
mutate(procent = round(100 * n / sum(n), 1)) |>
pivot_wider(names_from = tillid_kat, values_from = procent) |>
mutate(uddannelse_grp = "Total") |>
select(uddannelse_grp, Lav, Middel, Høj)
# Kombinér med eksisterende tabel
krydstabel_med_total <- bind_rows(krydstabel_bred, total_row)
# Udskriv
print(krydstabel_med_total)
#OLS
# Rens og gruppér køn
tillid_dk <- tillid_dk |>
mutate(
køn = na_if(køn, 7),
køn = na_if(køn, 8),
køn_faktor = factor(køn, levels = c(1, 0), labels = c("Kvinde", "Mand"))
)
# Rens og grupper uddannelse
tillid_dk <- tillid_dk |>
mutate(uddannelse = na_if(uddannelse, 97),
uddannelse = na_if(uddannelse, 98),
uddannelse = na_if(uddannelse, 10)) |>
mutate(uddannelse_grp = case_when(
uddannelse %in% 1:2 ~ "Grundskole",
uddannelse %in% 3:4 ~ "Gymnasial",
uddannelse == 5     ~ "Erhvervsfaglig",
uddannelse == 6     ~ "Kort videregående",
uddannelse == 7     ~ "Mellemlang videregående",
uddannelse == 8     ~ "Lang videregående",
uddannelse == 9     ~ "Forskeruddannelse",
TRUE ~ NA_character_
),
uddannelse_grp = factor(uddannelse_grp, levels = c(
"Grundskole", "Gymnasial", "Erhvervsfaglig",
"Kort videregående", "Mellemlang videregående", "Lang videregående", "Forskeruddannelse"
)))
# Rens og grupper alder
tillid_dk <- tillid_dk |>
mutate(alder = na_if(alder, 999),
alder_grp = case_when(
alder >= 18 & alder <= 29 ~ "18-29",
alder >= 30 & alder <= 39 ~ "30-39",
alder >= 40 & alder <= 49 ~ "40-49",
alder >= 50 & alder <= 59 ~ "50-59",
alder >= 60 & alder <= 69 ~ "60-69",
alder >= 70              ~ "70+",
TRUE ~ NA_character_
),
alder_grp = factor(alder_grp, levels = c(
"18-29", "30-39", "40-49", "50-59", "60-69", "70+"
)))
# Kør OLS-regression
# Model 1: Kun uddannelse
m1 <- lm(tillid ~ uddannelse_grp, data = tillid_dk)
# Model 2: + køn
m2 <- lm(tillid ~ uddannelse_grp + køn_faktor, data = tillid_dk)
# Model 3: + alder
m3 <- lm(tillid ~ uddannelse_grp + køn_faktor + alder_grp, data = tillid_dk)
summary(m1)
summary(m2)
summary(m3)
model_tillid <- lm(tillid ~ køn_faktor + alder_grp + uddannelse_grp, data = tillid_dk)
# Vis output
summary(model_tillid)
# Tidy the model for plotting
model_data <- broom::tidy(m3, conf.int = TRUE)
# Drop intercept
model_data <- model_data[model_data$term != "(Intercept)", ]
# Plot
ggplot(model_data, aes(x = term, y = estimate)) +
geom_point(size = 2) +
geom_errorbar(aes(ymin = conf.low, ymax = conf.high),
width = 0.2, color = "black", linewidth = 0.6) +
geom_hline(yintercept = 0, linetype = "dashed", color = "hotpink", linewidth = 0.8) +
coord_flip() +
labs(
title = "OLS-regression på politisk tillid",
x = "",
y = "Effekt på tillid (b)"
) +
theme_minimal(base_size = 13) +
theme(
plot.title = element_text(hjust = 0.5, face = "bold", size = 15),
plot.margin = margin(t = 10, r = 40, b = 10, l = 10),
axis.text.y = element_text(size = 11),
axis.text.x = element_text(size = 11)
)
# Replace ugly variable names with nice labels
model_data$term <- recode(model_data$term,
"uddannelse_grpGymnasial" = "Gymnasial",
"uddannelse_grpErhvervsfaglig" = "Erhvervsfaglig",
"uddannelse_grpKort videregående" = "Kort videregående",
"uddannelse_grpMellemlang videregående" = "Mellemlang videregående",
"uddannelse_grpLang videregående" = "Lang videregående",
"uddannelse_grpForskeruddannelse" = "Forskeruddannelse",
"køn_faktorMand" = "Mand",
"alder_grp30-39" = "30–39 år",
"alder_grp40-49" = "40–49 år",
"alder_grp50-59" = "50–59 år",
"alder_grp60-69" = "60–69 år",
"alder_grp70+"   = "70+ år"
)
